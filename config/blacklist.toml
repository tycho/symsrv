# Rejects any URL with a matching substring from this list
[substring_blacklist]
patterns = [
	# Sentry requests these, even though this is a Windows symbol server
    "elf-buildid-sym-",
	"mach-uuid-sym-",
]

# Rejects any URL where the first path component (i.e. '/foo/bar' would check
# the 'foo' part of the URL) matches a string in this list
[first_path_component_blacklist]
names = [
	# Never exists upstream
	"index2.txt",

	# AMD drivers
	"AMDav1Enc32.pdb",
	"AMDav1Enc64.pdb",
	"AMDh264Enc32.pdb",
	"AMDh264Enc64.pdb",
	"AMDh265Enc32.pdb",
	"AMDh265Enc64.pdb",
	"AMDhwDecoder_32.pdb",
	"AMDhwDecoder_64.pdb",
	"amdadlx32.pdb",
	"amdadlx64.pdb",
	"amdave32.pdb",
	"amdave64.pdb",
	"amdenc32.pdb",
	"amdenc64.pdb",
	"amdgfxinfo32.pdb",
	"amdgfxinfo64.pdb",
	"amdhdl32.pdb",
	"amdhdl64.pdb",
	"amdihk32.pdb",
	"amdihk64.pdb",
	"amdlvr32.pdb",
	"amdlvr64.pdb",
	"amdmiracast.pdb",
	"amdn1b32.pdb",
	"amdn1b64.pdb",
	"amdpcom32.pdb",
	"amdpcom64.pdb",
	"amdsacli32.pdb",
	"amdsacli64.pdb",
	"amdsasrv64.pdb",
	"amduve32.pdb",
	"amduve64.pdb",
	"amdvlk32.pdb",
	"amdvlk64.pdb",
	"amdxc32.pdb",
	"amdxc64.pdb",
	"amdxcstub32.pdb",
	"amdxcstub64.pdb",
	"amdxn32.pdb",
	"amdxn64.pdb",
	"amdxx32.pdb",
	"amdxx64.pdb",
	"amf-mft-mjpeg-decoder32.pdb",
	"amf-mft-mjpeg-decoder64.pdb",
	"amf-pa-ml32.pdb",
	"amf-pa-ml64.pdb",
	"amfrt32.pdb",
	"amfrt64.pdb",
	"amfrtdrv32.pdb",
	"amfrtdrv64.pdb",
	"ati2erec.pdb",
	"atiadlxx.pdb",
	"atiadlxy.pdb",
	"atidemgy.pdb",
	"atidx9loader32.pdb",
	"atidx9loader64.pdb",
	"atidxxstub32.pdb",
	"atidxxstub64.pdb",
	"atig6pxx.pdb",
	"atig6txx.pdb",
	"atigktxx.pdb",
	"atiglpxx.pdb",
	"atimpc32.pdb",
	"atimpc64.pdb",
	"atimuixx.pdb",
	"atio6axx.pdb",
	"atioglxx.pdb",
	"atisamu32.pdb",
	"atisamu64.pdb",
	"libamdsmi_guest.pdb",
	"libamdsmi_host.pdb",

	# NVIDIA drivers
	"NvCameraAllowlisting32.pdb",
	"NvCameraAllowlisting64.pdb",
	"NvFBC.pdb",
	"NvFBC64.pdb",
	"NvIFR.pdb",
	"NvIFR64.pdb",
	"NvTelemetry64.pdb",
	"_nvngx.pdb",
	"cudnn_infer64_7.pdb",
	"nv3dappshext.pdb",
	"nv3dappshextr.pdb",
	"nvAIDVC.pdb",
	"nvAIDVCx.pdb",
	"nvAIHDR.pdb",
	"nvAIHDRx.pdb",
	"nvDecMFTMjpeg.pdb",
	"nvDecMFTMjpegx.pdb",
	"nvEncMFTH264.pdb",
	"nvEncMFTH264x.pdb",
	"nvEncMFTav1.pdb",
	"nvEncMFTav1x.pdb",
	"nvEncMFThevc.pdb",
	"nvEncMFThevcx.pdb",
	"nvEncodeAPI.pdb",
	"nvEncodeAPI64.pdb",
	"nvapi.pdb",
	"nvapi64.pdb",
	"nvcpl.pdb",
	"nvcuda32.pdb",
	"nvcuda64.pdb",
	"nvcuda_loader32.pdb",
	"nvcuda_loader64.pdb",
	"nvcudadebugger.pdb",
	"nvcuvid32.pdb",
	"nvcuvid64.pdb",
	"nvd3dum.pdb",
	"nvd3dumx.pdb",
	"nvdevtools.pdb",
	"nvdevtoolsr.pdb",
	"nvdisps.pdb",
	"nvdispsr.pdb",
	"nvdlist.pdb",
	"nvdlistx.pdb",
	"nvdlppx.pdb",
	"nvdxdlkernels.pdb",
	"nvdxgdmal32.pdb",
	"nvdxgdmal64.pdb",
	"nvgames.pdb",
	"nvgamesr.pdb",
	"nvgpucomp32.pdb",
	"nvgpucomp64.pdb",
	"nvldumd.pdb",
	"nvldumdx.pdb",
	"nvlicensings.pdb",
	"nvlicensingsr.pdb",
	"nvml.pdb",
	"nvml_loader.pdb",
	"nvngx.pdb",
	"nvngx_dlss.pdb",
	"nvofapi.pdb",
	"nvofapi64.pdb",
	"nvoglv32.pdb",
	"nvoglv64.pdb",
	"nvopencl32.pdb",
	"nvopencl64.pdb",
	"nvoptix.pdb",
	"nvppe.pdb",
	"nvppex.pdb",
	"nvptxJitCompiler32.pdb",
	"nvptxJitCompiler64.pdb",
	"nvrtum64.pdb",
	"nvshext.pdb",
	"nvsmartmax.pdb",
	"nvsmartmax64.pdb",
	"nvspcap64.pdb",
	"nvsvc64.pdb",
	"nvsvcr.pdb",
	"nvsvs.pdb",
	"nvsvsr.pdb",
	"nvui.pdb",
	"nvuir.pdb",
	"nvvitvs.pdb",
	"nvvitvsr.pdb",
	"nvvkscv64.pdb",
	"nvvm32.pdb",
	"nvvm64.pdb",
	"nvwgf2um.pdb",
	"nvwgf2umx.pdb",
	"nvwss.pdb",
	"nvwssr.pdb",
	"nvxdapix.pdb",
	"nvxdbat.pdb",
	"nvxdplcy.pdb",
]

[suffix_blacklist]
suffixes = [
	".src.zip",
	".dbg",
	".db_",
]
